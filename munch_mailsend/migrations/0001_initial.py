# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-21 09:47
from __future__ import unicode_literals

import django.contrib.postgres.fields.hstore
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import munch.core.mail.utils
import munch_mailsend.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient', models.EmailField(max_length=254, verbose_name='recipient')),
                ('identifier', models.CharField(db_index=True, default=munch_mailsend.models.get_mail_identifier, max_length=35, unique=True, verbose_name='identifier')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date')),
                ('first_status_date', models.DateTimeField(blank=True, null=True, verbose_name='first status date')),
                ('latest_status_date', models.DateTimeField(blank=True, null=True, verbose_name='latest status date')),
                ('delivery_duration', models.DurationField(null=True, verbose_name='delivery duration')),
                ('had_delay', models.BooleanField(default=False, verbose_name='had delay')),
                ('headers', django.contrib.postgres.fields.hstore.HStoreField(default={})),
                ('sender', models.EmailField(max_length=254)),
                ('message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.RawMail')),
            ],
            options={
                'verbose_name': 'mail',
                'abstract': False,
                'verbose_name_plural': 'mails',
            },
        ),
        migrations.CreateModel(
            name='MailStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('unknown', 'unknown'), ('ignored', 'ignored'), ('deleted', 'deleted'), ('queued', 'queued'), ('sending', 'sending'), ('delayed', 'delayed (retrying)'), ('delivered', 'delivered to remote MTA'), ('dropped', 'not delivered (soft-bounce)'), ('bounced', 'not delivered (hard-bounce)')], default='queued', max_length=15, verbose_name='status')),
                ('creation_date', models.DateTimeField(verbose_name='creation_date')),
                ('source_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='source ip')),
                ('source_hostname', models.CharField(blank=True, max_length=100, null=True, verbose_name='source hostname')),
                ('destination_domain', models.CharField(max_length=150, verbose_name='destination domain')),
                ('status_code', models.CharField(blank=True, help_text='X.XXX.XXX, as defined in RFC3463', max_length=25, validators=[django.core.validators.RegexValidator(message='status code should follow rfc3463', regex='([234](\\.\\d{1,3}){2})')], verbose_name='SMTP status code')),
                ('raw_msg', models.TextField(verbose_name='raw message')),
                ('mail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='munch_mailsend.Mail')),
            ],
            options={
                'get_latest_by': 'creation_date',
                'abstract': False,
                'verbose_name_plural': 'Mail Statuses',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Celery worker name (nothing related with SMTP EHLO)', max_length=100)),
                ('ip', models.GenericIPAddressField(unique=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('enabled', models.BooleanField(default=True)),
                ('policies_settings', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
    ]
